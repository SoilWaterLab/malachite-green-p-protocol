library(dplyr)
#
# set working directory (windows compatable)
# *_forR.csv files have been modified from the raw data, specifically, second row unit header was merged w/ first
setwd("C://Users//sheila//Dropbox//PhD//O18isotopes//malachite_calibration_test_Rscript")
#
# load in data from the Tecan plate reader without headers, you have to copy/paste it into a csv file
data=read.table("test_malachite_data.csv",sep=",",header=F)
stand.data=data.frame(stdabs=rep(0,8),voladded_ul=rep(0,8))
View(stand.data)
View(stand.data)
stand.data=data.frame(stdabs=rep(0,8),voladded_ul=rep(0,8)) #create data frame for standards
stand.data$stdabs=t(data[1,1:8]) #standard abs values (Tecan reports the mean of 10 readings)
stand.data$voladded_ul=c(0,20,40,60,80,100,120,200) #known volume of 1ppm standard added then topped off to 200 ul
stand.data$conc_ppmP=c(0,0.1,0.2,0.3,0.4,0.5,0.6,1) #known concentrations of standards
View(stand.data)
lm=lm(conc_ppmP~stdabs,data=stand.data)
#
# print summary to check
summary(lm)
#
intercept=summary(lm)$coefficients[1,1]
slope=summary(lm)$coefficients[2,1]
rsquared=summary(lm)$r.squared
#
# plot line and observations for standard curve
plot(conc_ppmP~stdabs,data=stand.data,pch=16,xlab="Absorbance",ylab="Known PO4 as P Concentration (ppm)",
plot(conc_ppmP~stdabs,data=stand.data,pch=16,xlab="Absorbance",ylab="Known PO4 as P Concentration (ppm)",
main=paste("y =",round(slope,4),"x + ",round(intercept,4),", r-squared =",round(rsquared,4), sep=" "))
abline(a=intercept,b=slope,col="red",lwd=3)
intercept=summary(lm)$coefficients[1,1]
slope=summary(lm)$coefficients[2,1]
rsquared=summary(lm)$r.squared
#
# plot line and observations for standard curve
plot(conc_ppmP~stdabs,data=stand.data,pch=16,xlab="Absorbance",ylab="Known PO4 as P Concentration (ppm)",
main=paste("y =",round(slope,4),"x + ",round(intercept,4),", r-squared =",round(rsquared,4), sep=" "))
abline(a=intercept,b=slope,col="red",lwd=3)
numofstandards=8 #number of standards
stand.data=data.frame(stdabs=rep(0,numofstandards),voladded_ul=rep(0,numofstandards)) #create data frame for standards
stand.data$stdabs=t(data[1,1:numofstandards]) #standard abs values (Tecan reports the mean of 10 readings)
stand.data$voladded_ul=c(0,20,40,60,80,100,120,200) #known volume of 1ppm standard added then topped off to 200 ul
stand.data$conc_ppmP=c(0,0.1,0.2,0.3,0.4,0.5,0.6,1) #known concentrations of standards
sampslots=96-12 #96-12 because first row are standards
samp.data=data.frame(assay_id=rep(0,sampslots),abs=rep(0,sampslots))
print("error")
print("You did not define the data format properly."
print("You did not define the data format properly.")
print("You did not define the data format properly.")
print("You did not define the data format properly.")
print(You did not define the data format properly.)
library(dplyr)
#
# set working directory (windows compatable)
setwd("C://Users//sheila//Dropbox//PhD//O18isotopes//malachite_calibration_test_Rscript")
#
# reformat data from Tecan plate reader by copying/pasting (without headers or row names) it into a csv file and loading into R
data=read.table("test_malachite_data.csv",sep=",",header=F)
#
# standards (assumes standards are in wells A1-A8)
numofstandards=8 #number of standards
stand.data=data.frame(stdabs=rep(0,numofstandards),voladded_ul=rep(0,numofstandards)) #create data frame for standards
stand.data$stdabs=t(data[1,1:numofstandards]) #standard abs values (Tecan reports the mean of 10 readings)
stand.data$voladded_ul=c(0,20,40,60,80,100,120,200) #known volume of 1ppm standard added then topped off to 200 ul
stand.data$conc_ppmP=c(0,0.1,0.2,0.3,0.4,0.5,0.6,1) #known concentrations of standards
View(data)
reformat.samp.data=function(rawdata,numsampslots,format) {
if (format=="ACROSS") {
datatransp=as.data.frame(t(rawdata)) #transpose dataframe if samples are across rows
samp.data=data.frame(assay_id=rep(0,numsampslots),abs=rep(0,numsampslots)) #create data frame for sample data
strt=1 #start iterator outside loop to keep track of samples
for (i in 2:8) {
end=strt+11
samp.data$abs[strt:end]=datatransp[,i]
strt=strt+12 #add 12 to iterator
}
return(samp.data)
} else if (format=="DOWN") {
samp.data=data.frame(assay_id=rep(0,numsampslots),abs=rep(0,numsampslots)) #create data frame for sample data
strt=1 #start iterator outside loop to keep track of samples
for (i in 2:12) {
end=strt+7
samp.data$abs[strt:end]=data[,i]
strt=strt+8 #add 8 to iterator
}
return(samp.data)
} else {
return(print("You did not define the data format properly."))
}
}
blah=reformat.samp.data(data,sampslots,"ACROSS")
sampslots=96-12 #96-12 because first row are standards
blah=reformat.samp.data(data,sampslots,"ACROSS")
View(blah)
blah=reformat.samp.data(data,sampslots,"DOWN")
